{"version":3,"sources":["containers/Home.jsx","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["rand","randColor","frase","require","numRand","Math","round","random","Contenedor","styled","div","Card","Texto","p","Autor","article","Botones","BtnTwitter","button","BtnNew","Home","useState","num","setNum","primaryColor","setPrimaryColor","style","backgroundColor","id","color","texto","autor","onClick","window","open","height","src","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mhDAIIA,EACAC,E,yCCLW,I,iCDETC,EAAUC,EAAQ,IAAlBD,MAMN,SAASE,IACPJ,EAAOK,KAAKC,MAAsB,GAAhBD,KAAKE,UACvBN,EAAY,IAAMI,KAAKC,MAAsB,IAAhBD,KAAKE,UAGpCH,IAEA,IAAMI,EAAaC,IAAOC,IAAV,oIAOVC,EAAOF,IAAOC,IAAV,iKAQJE,EAAQH,IAAOI,EAAV,gDAGLC,EAAQL,IAAOM,QAAV,kEAILC,EAAUP,IAAOC,IAAV,sFAKPO,EAAaR,IAAOS,OAAV,kGAKVC,EAASV,IAAOS,OAAV,sIAQG,SAASE,IAAQ,IAAD,EACPC,mBAASrB,GADF,mBACtBsB,EADsB,KACjBC,EADiB,OAEWF,mBAASpB,GAFpB,mBAEtBuB,EAFsB,KAERC,EAFQ,KAI7B,OACE,cAACjB,EAAD,CAAYkB,MAAO,CAAEC,gBAAiBH,GAAtC,SACE,eAACb,EAAD,CAAMiB,GAAG,YAAT,UACE,cAAChB,EAAD,CAAOgB,GAAG,OAAOF,MAAO,CAAEG,MAAOL,GAAjC,SACGtB,EAAMoB,GAAKQ,QAEd,cAAChB,EAAD,CAAOc,GAAG,SAASF,MAAO,CAAEG,MAAOL,GAAnC,SACGtB,EAAMoB,GAAKS,QAEd,eAACf,EAAD,WACE,cAACC,EAAD,CACAe,QAAS,WAAKC,OAAOC,KAAK,0CAA0ChC,EAAMoB,GAAKQ,MAAM,WACrFJ,MAAO,CAAEC,gBAAiB,eAF1B,SAGE,qBAAKD,MAAuB,CAACS,OAAO,QAASC,IAAI,mFAEnD,cAACjB,EAAD,CACEO,MAAO,CAAEC,gBAAiBH,GAC1BI,GAAG,YACHI,QAAS,WACP5B,IACAmB,EAAOvB,GACPyB,EAAgBxB,IANpB,iCEhEKoC,MANf,WACE,OACE,cAACjB,EAAD,KCMWkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.de21d035.chunk.js","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nlet { frase } = require(\"../frases/frases.json\");\r\n\r\nlet rand;\r\nlet randColor;\r\nlet primaryColor = randColor;\r\n\r\nfunction numRand() {\r\n  rand = Math.round(Math.random() * 10);\r\n  randColor = \"#\" + Math.round(Math.random() * 1000000);\r\n}\r\n\r\nnumRand();\r\n\r\nconst Contenedor = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst Card = styled.div`\r\n  width: 60%;\r\n  min-width: 330px;\r\n  background-color: #f5f59d;\r\n  border-radius: 5px;\r\n  min-height: 20px;\r\n  padding: 20px 80px;\r\n`;\r\nconst Texto = styled.p`\r\n  font-size: 2rem;\r\n`;\r\nconst Autor = styled.article`\r\n  width: 100%;\r\n  text-align: right;\r\n`;\r\nconst Botones = styled.div`\r\n  width: 100%;\r\n  display: inline;\r\n  font-size: 1.2rem;\r\n`;\r\nconst BtnTwitter = styled.button`\r\n  border: 0;\r\n  border-radius: 5px 5px 5px 5px;\r\n  margin-top: 10px;\r\n`;\r\nconst BtnNew = styled.button`\r\n  float: right;\r\n  border: 0;\r\n  color: #f5f59d;\r\n  border-radius: 5px 5px 5px 5px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport default function Home() {\r\n  const [num, setNum] = useState(rand);\r\n  const [primaryColor, setPrimaryColor] = useState(randColor);\r\n\r\n  return (\r\n    <Contenedor style={{ backgroundColor: primaryColor }}>\r\n      <Card id=\"quote-box\">\r\n        <Texto id=\"text\" style={{ color: primaryColor }}>\r\n          {frase[num].texto}\r\n        </Texto>\r\n        <Autor id=\"author\" style={{ color: primaryColor }}>\r\n          {frase[num].autor}\r\n        </Autor>\r\n        <Botones>\r\n          <BtnTwitter\r\n          onClick={()=>{window.open(\"https://twitter.com/intent/tweet/?text=\"+frase[num].texto,\"_blank\")}}\r\n          style={{ backgroundColor: \"transparent\" }}>\r\n            <img style={{width: \"50px\"},{height:\"30px\"}} src=\"http://www.icorp.com.mx/blog/wp-content/uploads/2017/08/Logo-Twitter-png.png\"/>\r\n          </BtnTwitter>\r\n          <BtnNew\r\n            style={{ backgroundColor: primaryColor }}\r\n            id=\"new-quote\"\r\n            onClick={() => {\r\n              numRand();\r\n              setNum(rand);\r\n              setPrimaryColor(randColor);\r\n            }}\r\n          >\r\n            Nueva frase\r\n          </BtnNew>\r\n        </Botones>\r\n      </Card>\r\n    </Contenedor>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Home from './containers/Home';\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}